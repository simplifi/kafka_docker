#!/usr/bin/env bash
#
# Based on https://gist.github.com/maxim/6e15aa45ba010ab030c4
#
# Downloads the latest or specific version of kafka_docker from
# a PRIVATE github repo.
#
# PREREQUISITES
#
# curl, jq
#
# USAGE
#
# Copy this script to your desired project. Set all the variables
# inside the script, make sure you chmod +x it, then
# to download the specified kafka_docker
#
#     kafka_docker
#
# If your variables don't match an artifact, the script will exit
# with an error.

set -x

REPO=simplifi/kafka_docker
# target architecture
GO_ARCH="${GO_ARCH:-$(uname -s)_amd64}"
# regular expression for the desired download
PATTERN="kafka_docker_\\\\d+\\\\.\\\\d+\\\\.\\\\d+_${GO_ARCH}\\\\.tar\\\\.gz"
# tag name or the word "latest"
KAFKA_DOCKER_VERSION=${KAFKA_DOCKER_VERSION:-latest}
GITHUB="https://api.github.com"

alias errcho='>&2 echo'

function gh_curl() {
  curl $@ -H "Accept: application/vnd.github.v3.raw"
}

# Get data on just the release we're looking for from the api
if [ "$KAFKA_DOCKER_VERSION" = "latest" ]; then
  VERSION_TAG="latest"
else
  VERSION_TAG="tags/$KAFKA_DOCKER_VERSION"
fi
release_json=`gh_curl -s $GITHUB/repos/$REPO/releases/$VERSION_TAG`

# In the assets array of release_json, find asset with name matching PATTERN (case insensitively) and store its url
asset_url=`jq -r ".assets | map(select(.name | test(\"$PATTERN\", \"i\")))[0].url" <<< "$release_json"`

if [ "$asset_url" = "null" ]; then
  errcho "ERROR: version not found $KAFKA_DOCKER_VERSION"
  exit 1
fi

curl -L -H 'Accept: application/octet-stream' $asset_url | tar -xz --exclude="README.md" --exclude="LICENSE"
