#!/usr/bin/env bash
#
# Based on https://gist.github.com/maxim/6e15aa45ba010ab030c4
#
# Downloads the latest or specific version of kafka_docker from
# a PRIVATE github repo.
#
# PREREQUISITES
#
# curl, jq
#
# USAGE
#
# Copy this script to your desired project. Set all the variables
# inside the script, make sure you chmod +x it, then
# to download the specified kafka_docker
#
#     kafka_docker
#
# If your variables don't match an artifact, the script will exit
# with an error.

set -x

TOKEN=$GITHUB_TOKEN
REPO=simplifi/kafka_docker
# target architecture
ARCH="linux_amd64"
# regular expression for the desired download
PATTERN="kafka_docker_\\\\d+\\\\.\\\\d+\\\\.\\\\d+_${ARCH}\\\\.tar\\\\.gz"
# tag name or the word "latest"
VERSION=latest
GITHUB="https://api.github.com"

alias errcho='>&2 echo'

function gh_curl() {
  curl -H "Authorization: token $TOKEN" \
       -H "Accept: application/vnd.github.v3.raw" \
       $@
}

if [ "$VERSION" = "latest" ]; then
  # Github should return the latest release first.
  parser=".[0].assets | map(select(.name | test(\"$PATTERN\")))[0].id"
else
  parser=". | map(select(.tag_name == \"$VERSION\"))[0].assets | map(select(.name | test(\"$PATTERN\")))[0].id"
fi;

gh_curl -s $GITHUB/repos/$REPO/releases
asset_id=`gh_curl -s $GITHUB/repos/$REPO/releases | jq "$parser"`
if [ "$asset_id" = "null" ]; then
  errcho "ERROR: version not found $VERSION"
  exit 1
fi;

curl -L -H 'Accept:application/octet-stream' https://$TOKEN:@api.github.com/repos/$REPO/releases/assets/$asset_id | tar -xvz --exclude="README.md" --exclude="LICENSE"
